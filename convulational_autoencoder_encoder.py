# -*- coding: utf-8 -*-
"""Convulational_Autoencoder_Encoder.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BzYw-YwHP9Woy7DXXHj_mha1WKQrAJm4
"""

!pip install tensorflow==2.16.1

import numpy as np
import pandas as pd
import matplotlib
import tensorflow as tf
import sklearn

np.__version__, pd.__version__, matplotlib.__version__, tf.__version__, sklearn.__version__

from tensorflow.keras.datasets import mnist
from tensorflow.keras.models import Sequential,Model
from tensorflow.keras.layers import Dense, Input, InputLayer, Conv2D, MaxPooling2D, UpSampling2D, Flatten, Reshape
import matplotlib.pyplot as plt

(X_train, _), (X_test, _) = mnist.load_data()

X_train = X_train.reshape(len(X_train), 28, 28, 1)
X_test = X_test.reshape(len(X_test), 28, 28, 1)

X_train = X_train.astype('float32')/255
X_test = X_test.astype('float32')/255

autoenconder = Sequential()
autoencoder.add(InputLayer(shape=(28,28,1)))
autoencoder.add(Conv2D(filters=16, kernel_size=(3,3), activation='relu'))
autoencoder.add(MaxPooling2D(pool_size=(2,2)))

autoencoder.add(Conv2D(filters=8, kernel_size=(3,3), activation='relu'))
autoencoder.add(MaxPooling2D(pool_size=(2,2)))

autoencoder.add(Conv2D(filters=8, kernel_size=(3,3), activation='relu'))
autoencoder.add(Flatten())